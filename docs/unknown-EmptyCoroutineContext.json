{
  "type": "unknown",
  "name": "EmptyCoroutineContext",
  "signature": "object EmptyCoroutineContext : CoroutineContext, Serializable",
  "items": [
    {
      "text": "fun <R> fold(initial: R, operation: (R, Element) -> R): R",
      "desc": "Accumulates entries of this context starting with initial value and applying operation from left to right to current accumulator value and each element of this context."
    },
    {
      "text": "fun <E : Element> get(key: Key<E>): E?",
      "desc": "Returns the element with the given key from this context or null."
    },
    {
      "text": "fun hashCode(): Int",
      "desc": "Returns a hash code value for the object. The general contract of hashCode is:"
    },
    {
      "text": "fun minusKey(key: Key<*>): CoroutineContext",
      "desc": "Returns a context containing elements from this context, but without an element with the specified key."
    },
    {
      "text": "fun plus(context: CoroutineContext): CoroutineContext",
      "desc": "Returns a context containing elements from this context and elements from other context. The elements from this context with the same key as in the other one are dropped."
    },
    {
      "text": "fun toString(): String",
      "desc": "Returns a string representation of the object."
    }
  ]
}